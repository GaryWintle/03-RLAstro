---
import { Image } from "astro:assets";

// Import all images from the gallery folder as modules
const images = import.meta.glob("../assets/gallery/*.{png,jpg,jpeg,gif,webp}", { eager: true });
const imageModules = Object.values(images).map(img => img.default);
---

<div class="image-collage">
  {imageModules.map((imgSrc, index) => (
    <Image 
      src={imgSrc} 
      alt={`Gallery Image ${index + 1}`} 
      class="collage-image" 
      width={300}
      height={200}
      format="webp"
      quality={80}
    />
  ))}
</div>

<script define:vars={{imageModules}}>
  console.log('Total images:', imageModules.length);
  console.log('Image modules:', imageModules);

  const collageContainer = document.querySelector(".image-collage");

  if (!collageContainer) {
    console.error('Collage container not found');
  }

  // Track the currently displayed images
  let currentImages = [];

  // Initialize collage with unique images
  const initialImages = getUniqueImages(9);
  currentImages = [...initialImages];

  // Render initial images
  try {
    collageContainer.innerHTML = initialImages
      .map(
        (img, index) => `
          <img 
            src="${img}" 
            alt="Dynamic collage image ${index}" 
            class="collage-image" 
            loading="lazy"
          >
        `
      )
      .join("");
    
    console.log('Successfully rendered images');
  } catch (error) {
    console.error('Error rendering images:', error);
  }

  // Get a specified number of unique images
  function getUniqueImages(count, excludeImages = []) {
    console.log('Available image library:', imageModules);
    const availableImages = imageModules.filter(
      (img) => !excludeImages.includes(img)
    );

    console.log('Available images:', availableImages);

    // Shuffle available images and return the required number
    return shuffleArray(availableImages).slice(0, count);
  }

  // Shuffle an array
  function shuffleArray(array) {
    return array.sort(() => Math.random() - 0.5);
  }
</script>